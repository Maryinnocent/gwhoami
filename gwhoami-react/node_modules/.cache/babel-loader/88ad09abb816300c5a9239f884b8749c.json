{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\tools\\\\git-repo\\\\gwhoami\\\\gwhoami-react\\\\src\\\\component\\\\forms\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$();\n\nimport { faEye, faLock } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useRef, useState } from 'react';\nimport ReactDatePicker from \"react-datepicker\"; //import PasswordStrengthBar from 'react-password-strength-bar';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ReactFlagsSelect, { In, Us } from 'react-flags-select';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const InputText = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(_ref => {\n  _s();\n\n  let {\n    styleClass,\n    formKey,\n    formRef,\n    uiRefresh,\n    label,\n    placeholder,\n    required = \"\"\n  } = _ref;\n\n  const isNotValid = () => required && formRef.current.isSubmit && !formRef.current[formKey];\n\n  const inValidBorder = () => isNotValid() ? ' border-red-500' : '';\n\n  const [, refresh] = useState(-1);\n\n  const setFormVal = e => {\n    formRef.current[formKey] = e.currentTarget.value;\n    refresh(Date.now());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styleClass}${isNotValid() ? ' mark-err' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: `text-gray-600 mb-1${required ? ' required' : ''}`,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      required: !!required,\n      className: `w-full p-2 rounded${inValidBorder()}`,\n      placeholder: placeholder,\n      value: formRef.current[formKey],\n      onChange: e => setFormVal(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), isNotValid() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-start items-center text-red-500 text-xs mt-1\",\n      children: required\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}, \"icYC9ua6w0gagiyOPdrwJul0n2I=\")), \"icYC9ua6w0gagiyOPdrwJul0n2I=\");\n_c2 = InputText;\nexport const InputEmail = /*#__PURE__*/_s2( /*#__PURE__*/React.memo(_c3 = _s2(_ref2 => {\n  _s2();\n\n  let {\n    styleClass,\n    formKey,\n    formRef,\n    uiRefresh,\n    label,\n    placeholder,\n    required = \"\",\n    readonly = false,\n    disabled = false\n  } = _ref2;\n  const isEmail = useRef(new RegExp('[a-z0-9]+@[a-z]+\\\\.[a-z]{2,3}'));\n\n  const isNotValid = () => required && formRef.current.isSubmit && (!formRef.current[formKey] || !isEmail.current.test(formRef.current[formKey]));\n\n  const inValidBorder = () => isNotValid() ? ' border-red-500' : `${disabled ? ' bg-gray-200' : ''}`;\n\n  const errorNum = () => !formRef.current[formKey] ? 1 : !isEmail.current.test(formRef.current[formKey]) ? 2 : 0;\n\n  const [, refresh] = useState(-1);\n\n  const setFormVal = e => {\n    formRef.current[formKey] = e.currentTarget.value;\n    refresh(Date.now());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styleClass}${isNotValid() ? ' mark-err' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: `text-gray-600 mb-1${required ? ' required' : ''}`,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      required: !!required,\n      className: `w-full p-2 rounded${inValidBorder()}`,\n      placeholder: placeholder,\n      value: formRef.current[formKey],\n      onChange: e => setFormVal(e),\n      readOnly: readonly,\n      disabled: disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), isNotValid() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-start items-center text-red-500 text-xs mt-1\",\n      children: errorNum() === 1 ? required : 'Invalid email address'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}, \"Tg4pW3GuRONNKOODofhEdbT3s3w=\")), \"Tg4pW3GuRONNKOODofhEdbT3s3w=\");\n_c4 = InputEmail;\nexport const InputRadio = /*#__PURE__*/_s3( /*#__PURE__*/React.memo(_c5 = _s3(_ref3 => {\n  _s3();\n\n  let {\n    styleClass = \"\",\n    formKey,\n    formRef,\n    ui,\n    name,\n    label,\n    values = [],\n    icons = [],\n    required = \"\",\n    colors = []\n  } = _ref3;\n\n  const isNotValid = () => required && formRef.current.isSubmit && !formRef.current[formKey];\n\n  const inValidBorder = () => isNotValid() ? 'border-red-500' : 'border-gray-400';\n\n  const [, refresh] = useState(-1);\n\n  const setFormVal = e => {\n    formRef.current[formKey] = e.currentTarget.value;\n    refresh(Date.now());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styleClass}${isNotValid() ? ' mark-err' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"text-gray-600 mb-1 required\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: values.map((r, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: `inline-flex items-center${i > 0 ? ' ml-5' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          className: `rounded-full ${inValidBorder()} text-blue-400 shadow-sm focus:border-blue-700 focus:ring focus:ring-offset-0 focus:ring-indigo-200 focus:ring-opacity-50`,\n          name: name,\n          value: r,\n          defaultChecked: formRef.current[formKey] === r,\n          onChange: e => setFormVal(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2 text-gray-600\",\n          children: [icons[i] && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: icons[i],\n            className: \"text-2xl mr-1\",\n            style: {\n              color: formRef.current[formKey] === r ? colors[i] || 'rgb(75 85 99)' : 'rgb(75 85 99)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: r\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), isNotValid() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-start items-center text-red-500 text-xs mt-1\",\n      children: required\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}, \"icYC9ua6w0gagiyOPdrwJul0n2I=\")), \"icYC9ua6w0gagiyOPdrwJul0n2I=\");\n_c6 = InputRadio;\nexport const InputSelect = /*#__PURE__*/_s4( /*#__PURE__*/React.memo(_c7 = _s4(_ref4 => {\n  _s4();\n\n  let {\n    styleClass,\n    formKey,\n    formRef,\n    ui,\n    label,\n    options = [],\n    callback = null,\n    placeholder = \"\",\n    required = \"\",\n    ID = \"\"\n  } = _ref4;\n\n  const isNotValid = () => required && formRef.current.isSubmit && !formRef.current[formKey];\n\n  const inValidBorder = () => isNotValid() ? 'border-red-500' : 'border-gray-400';\n\n  const [, refresh] = useState(-1);\n\n  const setFormVal = e => {\n    formRef.current[formKey] = e.currentTarget.value;\n    if (callback) callback();else refresh(Date.now());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styleClass}${isNotValid() ? ' mark-err' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"text-gray-600 mb-1 required\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: `border ${inValidBorder()} w-full p-2 rounded`,\n      defaultValue: formRef.current[formKey],\n      onChange: e => setFormVal(e),\n      id: ID,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), options.map((itm, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: itm.key || itm,\n        children: itm.name || itm\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 42\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), isNotValid() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-start items-center text-red-500 text-xs mt-1\",\n      children: required\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}, \"icYC9ua6w0gagiyOPdrwJul0n2I=\")), \"icYC9ua6w0gagiyOPdrwJul0n2I=\");\n_c8 = InputSelect;\nexport const InputPhone = /*#__PURE__*/_s5( /*#__PURE__*/React.memo(_c9 = _s5(_ref5 => {\n  _s5();\n\n  let {\n    styleClass,\n    formKey,\n    formRef,\n    ui,\n    label,\n    callback = null,\n    code,\n    placeholder = \"\",\n    required = \"\",\n    ID = \"\"\n  } = _ref5;\n\n  const isNotValid = () => required && formRef.current.isSubmit && !formRef.current[formKey];\n\n  const inValidBorder = () => isNotValid() ? 'border-red-500' : 'border-gray-400';\n\n  const [, refresh] = useState(-1);\n\n  const setFormVal = e => {\n    formRef.current[formKey] = e.currentTarget.value;\n    if (callback) callback();else refresh(Date.now());\n  };\n\n  const numberCheck = evt => {\n    const charCode = evt.which ? evt.which : evt.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) evt.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styleClass}${isNotValid() ? ' mark-err' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"text-gray-600 mb-1 required\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `inline-flex items-center justify-center px-3 text-sm text-gray-900 bg-gray-100 rounded-l-md border border-r-0 ${inValidBorder()} dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600 w-15`,\n        children: formRef.current[code] === '-' ? '-' : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-2\",\n            children: formRef.current[code]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 62\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formRef.current[code] === '+1' ? /*#__PURE__*/_jsxDEV(Us, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 155\n            }, this) : /*#__PURE__*/_jsxDEV(In, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 163\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 115\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: `rounded-none rounded-r-lg border ${inValidBorder()} text-gray-900 focus:ring-blue-500 focus:border-blue-500 block flex-1 min-w-0 w-full p-2 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500`,\n        placeholder: placeholder,\n        value: formRef.current[formKey],\n        onKeyPress: e => numberCheck(e),\n        onChange: e => setFormVal(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), isNotValid() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-start items-center text-red-500 text-xs mt-1\",\n      children: required\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}, \"icYC9ua6w0gagiyOPdrwJul0n2I=\")), \"icYC9ua6w0gagiyOPdrwJul0n2I=\");\n_c10 = InputPhone;\nexport const InputDOB = /*#__PURE__*/_s6( /*#__PURE__*/React.memo(_c11 = _s6(_ref6 => {\n  _s6();\n\n  let {\n    styleClass,\n    formKey,\n    formRef,\n    ui,\n    label,\n    callback = null,\n    code,\n    placeholder = \"\",\n    required = \"\",\n    ID = \"\"\n  } = _ref6;\n\n  const isNotValid = () => required && formRef.current.isSubmit && !formRef.current[formKey];\n\n  const inValidBorder = () => isNotValid() ? 'border-red-500' : 'border-gray-400';\n\n  const [, refresh] = useState(-1);\n\n  const setFormVal = date => {\n    formRef.current[formKey] = date;\n    if (callback) callback();else refresh(Date.now());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styleClass}${isNotValid() ? ' mark-err' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"text-gray-600 mb-1 required\",\n      children: \"DOB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactDatePicker, {\n      maxDate: new Date(),\n      selected: formRef.current[formKey],\n      onChange: date => setFormVal(date),\n      placeholderText: placeholder,\n      className: `border ${inValidBorder()} w-full p-2 rounded`,\n      dateFormat: 'MMM/dd/yyyy',\n      yearDropdownItemNumber: 20,\n      scrollableYearDropdown: true,\n      showYearDropdown: true,\n      showMonthDropdown: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), isNotValid() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-start items-center text-red-500 text-xs mt-1\",\n      children: required\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n}, \"icYC9ua6w0gagiyOPdrwJul0n2I=\")), \"icYC9ua6w0gagiyOPdrwJul0n2I=\");\n_c12 = InputDOB;\nexport const PasswordCheck = /*#__PURE__*/_s7( /*#__PURE__*/React.memo(_c13 = _s7(_ref7 => {\n  _s7();\n\n  let {\n    styleClass,\n    formKey,\n    formRef,\n    ui,\n    ID = \"\"\n  } = _ref7;\n\n  const isNotValid = () => formRef.current.isSubmit && !formRef.current[formKey];\n\n  const inValidBorder = () => {\n    return isNotValid() ? 'border-red-500' : formRef.current.isSubmit && feed >= 0 && feed < 2 ? 'border-red-500' : 'border-gray-400';\n  };\n\n  const [feed, setFeed] = useState(0);\n  const [isEyeToggle, setEyToggle] = useState(false);\n  const [isEyeToggle2, setEyToggle2] = useState(false);\n  const [, refresh] = useState(-1);\n\n  const setFormVal = e => {\n    formRef.current[formKey] = e.currentTarget.value;\n    refresh(Date.now());\n  };\n\n  const rePass = e => {\n    formRef.current[`${formKey}_re`] = e.currentTarget.value;\n    refresh(Date.now());\n  };\n\n  const scoreFeed = (score, feed) => {\n    setFeed(score);\n  };\n\n  const comparePass = () => {\n    return formRef.current[formKey] !== formRef.current[`${formKey}_re`];\n  };\n\n  const toggleEye = () => setEyToggle(!isEyeToggle);\n\n  const toggleEye2 = () => setEyToggle2(!isEyeToggle2);\n\n  const mouseOutToggle = () => {\n    if (isEyeToggle) setEyToggle(false);\n  };\n\n  const mouseOutToggle2 = () => {\n    if (isEyeToggle2) setEyToggle2(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex flex-col${isNotValid() || formRef.current.isSubmit && feed >= 0 && feed < 2 ? ' mark-err' : ''}${formRef.current[formKey].length ? '' : ' mb-4'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-gray-600 mb-1 required\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: isEyeToggle ? \"text\" : \"password\",\n          className: `border ${inValidBorder()} w-full py-2 pl-9 pr-10 rounded focus:border-dodge-b`,\n          placeholder: \"Password\",\n          value: formRef.current[formKey],\n          maxLength: 25,\n          onChange: evt => setFormVal(evt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-y-0 left-1 flex items-center px-2 pointer-events-none text-gray-600\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faLock,\n            className: \"text-xl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 121\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-y-0 right-0 flex items-center px-2\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faEye,\n            className: \"text-xl opacity-50 hover:opacity-100 hover:cursor-pointer\",\n            onClick: toggleEye,\n            onMouseOut: mouseOutToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), isNotValid() && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start items-center text-red-500 text-xs mt-1\",\n        children: \"Password is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 34\n      }, this), formRef.current[formKey].length > 0 && /*#__PURE__*/_jsxDEV(PasswordStrengthBar, {\n        password: formRef.current[formKey],\n        minLength: 8,\n        className: \"mt-2\",\n        onChangeScore: (score, feed) => scoreFeed(score, feed)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 57\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex flex-col mb-4${comparePass() ? ' mark-err' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-gray-600 mb-1 required\",\n        children: \"Re-Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: isEyeToggle2 ? \"text\" : \"password\",\n          className: `border ${comparePass() ? 'border-red-500' : 'border-gray-400'} w-full py-2 pl-9 pr-10 rounded focus:border-dodge-b`,\n          placeholder: \"Re-type password\",\n          value: formRef.current[`${formKey}_re`],\n          onChange: e => rePass(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-y-0 left-1 flex items-center px-2 pointer-events-none text-gray-600\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faLock,\n            className: \"text-xl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 121\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-y-0 right-0 flex items-center px-2\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faEye,\n            className: \"text-xl opacity-50 hover:opacity-100 hover:cursor-pointer\",\n            onClick: toggleEye2,\n            onMouseOut: mouseOutToggle2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), comparePass() && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start items-center text-red-500 text-xs mt-1\",\n        children: \"Password not matched\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"fwKbj5i+l3sLdpVqJEGyUsUezHg=\")), \"fwKbj5i+l3sLdpVqJEGyUsUezHg=\");\n_c14 = PasswordCheck;\nexport const CountrySelect = /*#__PURE__*/_s8( /*#__PURE__*/React.memo(_c15 = _s8(_ref8 => {\n  _s8();\n\n  let {\n    styleClass,\n    formKey,\n    formRef,\n    ui,\n    label,\n    callback = null,\n    placeholder = \"\",\n    required = \"\",\n    ID = \"\"\n  } = _ref8;\n\n  const isNotValid = () => required && formRef.current.isSubmit && !formRef.current[formKey];\n\n  const inValidBorder = () => isNotValid() ? 'border-red-500' : 'border-gray-400';\n\n  const [, refresh] = useState(-1);\n\n  const setFormVal = code => {\n    formRef.current[formKey] = code;\n    if (callback) callback();else refresh(Date.now());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styleClass}${isNotValid() ? ' mark-err' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"text-gray-600 mb-1 required\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlagsSelect, {\n      className: `${inValidBorder()} w-full`,\n      id: ID,\n      selected: formRef.current[formKey],\n      onSelect: code => setFormVal(code),\n      countries: [\"US\", \"IN\"],\n      placeholder: placeholder // customLabels={{\n      //     \"US\": { primary: \"United States\", secondary: \"+1\" },\n      //     \"IN\": { primary: \"India\", secondary: \"+91\" },\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this), isNotValid() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-start items-center text-red-500 text-xs mt-1\",\n      children: required\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 9\n  }, this);\n}, \"icYC9ua6w0gagiyOPdrwJul0n2I=\")), \"icYC9ua6w0gagiyOPdrwJul0n2I=\");\n_c16 = CountrySelect;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n\n$RefreshReg$(_c, \"InputText$React.memo\");\n$RefreshReg$(_c2, \"InputText\");\n$RefreshReg$(_c3, \"InputEmail$React.memo\");\n$RefreshReg$(_c4, \"InputEmail\");\n$RefreshReg$(_c5, \"InputRadio$React.memo\");\n$RefreshReg$(_c6, \"InputRadio\");\n$RefreshReg$(_c7, \"InputSelect$React.memo\");\n$RefreshReg$(_c8, \"InputSelect\");\n$RefreshReg$(_c9, \"InputPhone$React.memo\");\n$RefreshReg$(_c10, \"InputPhone\");\n$RefreshReg$(_c11, \"InputDOB$React.memo\");\n$RefreshReg$(_c12, \"InputDOB\");\n$RefreshReg$(_c13, \"PasswordCheck$React.memo\");\n$RefreshReg$(_c14, \"PasswordCheck\");\n$RefreshReg$(_c15, \"CountrySelect$React.memo\");\n$RefreshReg$(_c16, \"CountrySelect\");","map":{"version":3,"sources":["C:/dev/tools/git-repo/gwhoami/gwhoami-react/src/component/forms/index.js"],"names":["faEye","faLock","FontAwesomeIcon","React","useRef","useState","ReactDatePicker","ReactFlagsSelect","In","Us","PasswordStrengthBar","InputText","memo","styleClass","formKey","formRef","uiRefresh","label","placeholder","required","isNotValid","current","isSubmit","inValidBorder","refresh","setFormVal","e","currentTarget","value","Date","now","InputEmail","readonly","disabled","isEmail","RegExp","test","errorNum","InputRadio","ui","name","values","icons","colors","map","r","i","color","InputSelect","options","callback","ID","itm","idx","key","InputPhone","code","numberCheck","evt","charCode","which","keyCode","preventDefault","InputDOB","date","PasswordCheck","feed","setFeed","isEyeToggle","setEyToggle","isEyeToggle2","setEyToggle2","rePass","scoreFeed","score","comparePass","toggleEye","toggleEye2","mouseOutToggle","mouseOutToggle2","length","CountrySelect"],"mappings":"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","sourcesContent":["import { faEye, faLock } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useRef, useState } from 'react';\r\nimport ReactDatePicker from \"react-datepicker\";\r\n//import PasswordStrengthBar from 'react-password-strength-bar';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ReactFlagsSelect, { In, Us } from 'react-flags-select';\r\nimport PasswordStrengthBar from 'react-password-strength-bar';\r\n\r\nexport const InputText = React.memo(({styleClass, formKey, formRef, uiRefresh, label, placeholder, required=\"\"}) => {\r\n    const isNotValid = () =>required && formRef.current.isSubmit && !formRef.current[formKey];\r\n    const inValidBorder = ()=>isNotValid() ? ' border-red-500' : '';\r\n    const [, refresh] = useState(-1);\r\n    const setFormVal = (e) => {\r\n        formRef.current[formKey] = e.currentTarget.value;\r\n        refresh(Date.now());\r\n    }\r\n    return (\r\n        <div className={`${styleClass}${isNotValid() ? ' mark-err' : ''}`}>\r\n            <label className={`text-gray-600 mb-1${required?' required':''}`}>{label}</label>\r\n            <input type=\"text\" required={!!required} className={`w-full p-2 rounded${inValidBorder()}`} placeholder={placeholder} value={formRef.current[formKey]} onChange={e=>setFormVal(e)} />\r\n            {isNotValid() && <div className='flex justify-start items-center text-red-500 text-xs mt-1'>{required}</div>}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport const InputEmail = React.memo(({styleClass, formKey, formRef, uiRefresh, label, placeholder, required=\"\", readonly=false, disabled=false}) => {\r\n    const isEmail = useRef(new RegExp('[a-z0-9]+@[a-z]+\\\\.[a-z]{2,3}'))\r\n    const isNotValid = () =>required && formRef.current.isSubmit && (!formRef.current[formKey] || !isEmail.current.test(formRef.current[formKey]));\r\n    const inValidBorder = ()=>isNotValid() ? ' border-red-500' : `${disabled ? ' bg-gray-200' : ''}`;\r\n    const errorNum = () => !formRef.current[formKey] ? 1 : !isEmail.current.test(formRef.current[formKey]) ? 2 : 0;\r\n    const [, refresh] = useState(-1);\r\n    const setFormVal = (e) => {\r\n        formRef.current[formKey] = e.currentTarget.value;\r\n        refresh(Date.now());\r\n    }\r\n    return (\r\n        <div className={`${styleClass}${isNotValid() ? ' mark-err' : ''}`}>\r\n            <label className={`text-gray-600 mb-1${required?' required':''}`}>{label}</label>\r\n            <input type=\"text\" required={!!required} className={`w-full p-2 rounded${inValidBorder()}`} placeholder={placeholder} value={formRef.current[formKey]} onChange={e=>setFormVal(e)} readOnly={readonly} disabled={disabled} />\r\n            {isNotValid() && <div className='flex justify-start items-center text-red-500 text-xs mt-1'>{errorNum() === 1 ? required : 'Invalid email address'}</div>}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport const InputRadio = React.memo(({styleClass=\"\",formKey, formRef, ui, name, label, values = [], icons = [], required=\"\", colors=[]}) => {\r\n    const isNotValid = () =>required && formRef.current.isSubmit && !formRef.current[formKey];\r\n    const inValidBorder = ()=>isNotValid() ? 'border-red-500' : 'border-gray-400';\r\n    const [, refresh] = useState(-1);\r\n    const setFormVal = (e) => {\r\n        formRef.current[formKey] = e.currentTarget.value;\r\n        refresh(Date.now());\r\n    }\r\n    return (\r\n        <div className={`${styleClass}${isNotValid() ? ' mark-err' : ''}`}>\r\n            <label className=\"text-gray-600 mb-1 required\">{label}</label>\r\n            <div className=\"flex\">\r\n                {values.map((r, i)=> (\r\n                    <label key={i} className={`inline-flex items-center${i > 0 ? ' ml-5' : ''}`}>\r\n                        <input \r\n                            type=\"radio\" \r\n                            className={`rounded-full ${inValidBorder()} text-blue-400 shadow-sm focus:border-blue-700 focus:ring focus:ring-offset-0 focus:ring-indigo-200 focus:ring-opacity-50`}\r\n                            name={name}\r\n                            value={r}\r\n                            defaultChecked={formRef.current[formKey] === r}\r\n                            onChange={e=>setFormVal(e)}\r\n                        />\r\n                        <span className=\"ml-2 text-gray-600\">\r\n                            {icons[i] && <FontAwesomeIcon icon={icons[i]} className=\"text-2xl mr-1\" style={{color: formRef.current[formKey] === r ? colors[i]||'rgb(75 85 99)' : 'rgb(75 85 99)' }} />}\r\n                            <span>{r}</span>\r\n                        </span>\r\n                    </label>\r\n                ))}\r\n            </div>\r\n            {isNotValid() && <div className='flex justify-start items-center text-red-500 text-xs mt-1'>{required}</div>}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport const InputSelect = React.memo(({styleClass, formKey, formRef, ui, label, options = [], callback = null,placeholder=\"\", required=\"\", ID=\"\"}) => {\r\n    const isNotValid = () =>required && formRef.current.isSubmit && !formRef.current[formKey];\r\n    const inValidBorder = ()=>isNotValid() ? 'border-red-500' : 'border-gray-400';\r\n    const [, refresh] = useState(-1);\r\n    const setFormVal = (e) => {\r\n        formRef.current[formKey] = e.currentTarget.value;\r\n        if (callback) callback();\r\n        else refresh(Date.now());\r\n    }\r\n    return (\r\n        <div className={`${styleClass}${isNotValid() ? ' mark-err' : ''}`}>\r\n            <label className=\"text-gray-600 mb-1 required\">{label}</label>\r\n            <select className={`border ${inValidBorder()} w-full p-2 rounded`} defaultValue={formRef.current[formKey]} onChange={e=>setFormVal(e)} id={ID}>\r\n                <option value=\"\">{placeholder}</option>\r\n                {options.map((itm, idx)=><option key={idx} value={itm.key||itm}>{itm.name||itm}</option>)}\r\n            </select>\r\n            {isNotValid() && <div className='flex justify-start items-center text-red-500 text-xs mt-1'>{required}</div>}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport const InputPhone = React.memo(({styleClass, formKey, formRef, ui, label, callback = null, code, placeholder=\"\", required=\"\", ID=\"\"}) => {\r\n    const isNotValid = () =>required && formRef.current.isSubmit && !formRef.current[formKey];\r\n    const inValidBorder = ()=>isNotValid() ? 'border-red-500' : 'border-gray-400';\r\n    const [, refresh] = useState(-1);\r\n    const setFormVal = (e) => {\r\n        formRef.current[formKey] = e.currentTarget.value;\r\n        if (callback) callback();\r\n        else refresh(Date.now());\r\n    }\r\n    const numberCheck = (evt) => {\r\n        const charCode = (evt.which) ? evt.which : evt.keyCode;\r\n        if (charCode > 31 && (charCode < 48 || charCode > 57)) evt.preventDefault();\r\n    }\r\n    return (\r\n        <div className={`${styleClass}${isNotValid() ? ' mark-err' : ''}`}>\r\n            <label className=\"text-gray-600 mb-1 required\">{label}</label>\r\n            <div className=\"flex\">\r\n                <span \r\n                    className={`inline-flex items-center justify-center px-3 text-sm text-gray-900 bg-gray-100 rounded-l-md border border-r-0 ${inValidBorder()} dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600 w-15`}\r\n                >\r\n                    {formRef.current[code] === '-' ? '-' : <><span className='mr-2'>{formRef.current[code]}</span><span>{formRef.current[code] === '+1' ? <Us/> : <In/>}</span></>}\r\n                </span>\r\n                <input \r\n                    type=\"text\" \r\n                    className={`rounded-none rounded-r-lg border ${inValidBorder()} text-gray-900 focus:ring-blue-500 focus:border-blue-500 block flex-1 min-w-0 w-full p-2 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500`}\r\n                    placeholder={placeholder}\r\n                    value={formRef.current[formKey]}\r\n                    onKeyPress={e=>numberCheck(e)}\r\n                    onChange={e=>setFormVal(e)}\r\n                />\r\n            </div>\r\n            {isNotValid() && <div className='flex justify-start items-center text-red-500 text-xs mt-1'>{required}</div>}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport const InputDOB = React.memo(({styleClass, formKey, formRef, ui, label, callback = null, code, placeholder=\"\", required=\"\", ID=\"\"}) => {\r\n    const isNotValid = () =>required && formRef.current.isSubmit && !formRef.current[formKey];\r\n    const inValidBorder = ()=>isNotValid() ? 'border-red-500' : 'border-gray-400';\r\n    const [, refresh] = useState(-1);\r\n    const setFormVal = (date) => {\r\n        formRef.current[formKey] = date;\r\n        if (callback) callback();\r\n        else refresh(Date.now());\r\n    }\r\n    return (\r\n        <div className={`${styleClass}${isNotValid() ? ' mark-err' : ''}`}>\r\n            <label className=\"text-gray-600 mb-1 required\">DOB</label>\r\n            <ReactDatePicker \r\n                maxDate={new Date()} \r\n                selected={formRef.current[formKey]} \r\n                onChange={date=>setFormVal(date)} \r\n                placeholderText={placeholder} \r\n                className={`border ${inValidBorder()} w-full p-2 rounded`} \r\n                dateFormat={'MMM/dd/yyyy'}\r\n                yearDropdownItemNumber={20}\r\n                scrollableYearDropdown={true}\r\n                showYearDropdown\r\n                showMonthDropdown\r\n            />\r\n            {isNotValid() && <div className='flex justify-start items-center text-red-500 text-xs mt-1'>{required}</div>}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport const PasswordCheck = React.memo(({styleClass, formKey, formRef, ui, ID=\"\"}) => {\r\n    const isNotValid = () =>formRef.current.isSubmit && !formRef.current[formKey];\r\n    const inValidBorder = ()=> {\r\n        return isNotValid() ? 'border-red-500' : (formRef.current.isSubmit && feed >=0 && feed < 2) ? 'border-red-500' : 'border-gray-400';\r\n    }\r\n    const [feed, setFeed] = useState(0);\r\n    const [isEyeToggle, setEyToggle] = useState(false);\r\n    const [isEyeToggle2, setEyToggle2] = useState(false);\r\n    const [, refresh] = useState(-1);\r\n    const setFormVal = (e) => {\r\n        formRef.current[formKey] = e.currentTarget.value;\r\n        refresh(Date.now());\r\n    }\r\n    const rePass = (e) => {\r\n        formRef.current[`${formKey}_re`] = e.currentTarget.value;\r\n        refresh(Date.now());\r\n    }\r\n    const scoreFeed = (score, feed) => {\r\n        setFeed(score);\r\n    }\r\n    const comparePass = () => {\r\n        return (formRef.current[formKey] !== formRef.current[`${formKey}_re`] );\r\n    }\r\n    const toggleEye = () =>setEyToggle(!isEyeToggle);\r\n    const toggleEye2 = () =>setEyToggle2(!isEyeToggle2);\r\n    const mouseOutToggle = ()=> {\r\n        if (isEyeToggle) setEyToggle(false);\r\n    }\r\n    const mouseOutToggle2 = () => {\r\n        if (isEyeToggle2) setEyToggle2(false);\r\n    }\r\n    return (\r\n        <>\r\n            <div className={`flex flex-col${(isNotValid() || (formRef.current.isSubmit && feed >=0 && feed < 2)) ? ' mark-err' : ''}${formRef.current[formKey].length ? '': ' mb-4'}`}>\r\n                <label className=\"text-gray-600 mb-1 required\">Password</label>\r\n                <div className='relative'>\r\n                    <input \r\n                        type={isEyeToggle ? \"text\" : \"password\"}\r\n                        className={`border ${inValidBorder()} w-full py-2 pl-9 pr-10 rounded focus:border-dodge-b`} \r\n                        placeholder=\"Password\"\r\n                        value={formRef.current[formKey]}\r\n                        maxLength={25}\r\n                        onChange = {evt=>setFormVal(evt)}\r\n                    />\r\n                    <div className=\"absolute inset-y-0 left-1 flex items-center px-2 pointer-events-none text-gray-600\"><FontAwesomeIcon icon={faLock} className=\"text-xl\"/></div>\r\n                    <div className=\"absolute inset-y-0 right-0 flex items-center px-2\">\r\n                        {/* <FontAwesomeIcon icon={isEyeToggle ? faEyeSlash : faEye} className=\"text-xl opacity-50 hover:opacity-100 hover:cursor-pointer\" onClick={toggleEye}/> */}\r\n                        <FontAwesomeIcon icon={faEye} className=\"text-xl opacity-50 hover:opacity-100 hover:cursor-pointer\" onClick={toggleEye} onMouseOut={mouseOutToggle}/>\r\n                    </div>\r\n                </div>\r\n                {isNotValid() && <div className='flex justify-start items-center text-red-500 text-xs mt-1'>Password is required</div>}\r\n                {formRef.current[formKey].length > 0 && <PasswordStrengthBar password={formRef.current[formKey]} minLength={8} className=\"mt-2\" onChangeScore={(score, feed)=>scoreFeed(score, feed)}/>}\r\n            </div>\r\n            <div className={`flex flex-col mb-4${comparePass() ? ' mark-err' : ''}`}>\r\n                <label className=\"text-gray-600 mb-1 required\">Re-Password</label>\r\n                <div className='relative'>\r\n                    <input \r\n                        type={isEyeToggle2 ? \"text\" : \"password\"}\r\n                        className={`border ${comparePass() ? 'border-red-500' : 'border-gray-400'} w-full py-2 pl-9 pr-10 rounded focus:border-dodge-b`} \r\n                        placeholder=\"Re-type password\"\r\n                        value={formRef.current[`${formKey}_re`]}\r\n                        onChange={e=>rePass(e)}\r\n                    />\r\n                    <div className=\"absolute inset-y-0 left-1 flex items-center px-2 pointer-events-none text-gray-600\"><FontAwesomeIcon icon={faLock} className=\"text-xl\"/></div>\r\n                    <div className=\"absolute inset-y-0 right-0 flex items-center px-2\">\r\n                        {/* <FontAwesomeIcon icon={isEyeToggle2 ? faEyeSlash : faEye} className=\"text-xl opacity-50 hover:opacity-100 hover:cursor-pointer\" onClick={toggleEye2}/> */}\r\n                        <FontAwesomeIcon icon={faEye} className=\"text-xl opacity-50 hover:opacity-100 hover:cursor-pointer\" onClick={toggleEye2} onMouseOut={mouseOutToggle2}/>\r\n                    </div>\r\n                </div>\r\n                {comparePass() && <div className='flex justify-start items-center text-red-500 text-xs mt-1'>Password not matched</div>}\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport const CountrySelect = React.memo(({styleClass, formKey, formRef, ui, label, callback = null,placeholder=\"\", required=\"\", ID=\"\"}) => {\r\n    const isNotValid = () =>required && formRef.current.isSubmit && !formRef.current[formKey];\r\n    const inValidBorder = ()=>isNotValid() ? 'border-red-500' : 'border-gray-400';\r\n    const [, refresh] = useState(-1);\r\n    const setFormVal = (code) => {\r\n        formRef.current[formKey] = code;\r\n        if (callback) callback();\r\n        else refresh(Date.now());\r\n    }\r\n    return (\r\n        <div className={`${styleClass}${isNotValid() ? ' mark-err' : ''}`}>\r\n            <label className=\"text-gray-600 mb-1 required\">{label}</label>\r\n            <ReactFlagsSelect\r\n                className={`${inValidBorder()} w-full`}\r\n                id={ID}\r\n                selected={formRef.current[formKey]}\r\n                onSelect={(code) => setFormVal(code)}\r\n                countries={[\"US\", \"IN\"]}\r\n                placeholder={placeholder}\r\n                // customLabels={{\r\n                //     \"US\": { primary: \"United States\", secondary: \"+1\" },\r\n                //     \"IN\": { primary: \"India\", secondary: \"+91\" },\r\n                // }}\r\n            />\r\n            {isNotValid() && <div className='flex justify-start items-center text-red-500 text-xs mt-1'>{required}</div>}\r\n        </div>\r\n    );\r\n});"]},"metadata":{},"sourceType":"module"}