{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\tools\\\\git-repo\\\\gwhoami\\\\gwhoami-react\\\\src\\\\toast\\\\index.js\";\nimport React from \"react\";\nimport { Slide, toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToastComponent = _ref => {\n  let {\n    message\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row items-center\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n};\n\n_c = ToastComponent;\nexport const ToastPosition = {\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nconst ToastMessage = _ref2 => {\n  let {\n    type,\n    message,\n    timeout,\n    position\n  } = _ref2;\n  let toastCallback = null;\n  if (type === \"error\") toastCallback = () => toast.error( /*#__PURE__*/_jsxDEV(ToastComponent, {\n    message: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this), {\n    position: position || \"top-right\",\n    autoClose: timeout || 1500,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    transition: Slide\n  });else if (type === \"success\") toastCallback = () => toast.success( /*#__PURE__*/_jsxDEV(ToastComponent, {\n    message: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this), {\n    position: position || \"top-right\",\n    autoClose: timeout || 1500,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    transition: Slide\n  });else toastCallback = () => toast.warning( /*#__PURE__*/_jsxDEV(ToastComponent, {\n    message: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this), {\n    position: position || \"top-right\",\n    autoClose: timeout || 1500,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    transition: Slide\n  });\n  return toastCallback();\n};\n\n_c2 = ToastMessage;\nexport default ToastMessage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ToastComponent\");\n$RefreshReg$(_c2, \"ToastMessage\");","map":{"version":3,"sources":["C:/dev/tools/git-repo/gwhoami/gwhoami-react/src/toast/index.js"],"names":["React","Slide","toast","ToastComponent","message","ToastPosition","TOP_CENTER","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_CENTER","ToastMessage","type","timeout","position","toastCallback","error","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","transition","success","warning"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,gBAA7B;;;AAEA,MAAMC,cAAc,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBACrB;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA,cACGA;AADH;AAAA;AAAA;AAAA;AAAA,UADqB;AAAA,CAAvB;;KAAMD,c;AAML,OAAO,MAAME,aAAa,GAAI;AAC5BC,EAAAA,UAAU,EAAE,YADgB;AAE5BC,EAAAA,SAAS,EAAE,WAFiB;AAG5BC,EAAAA,YAAY,EAAE,cAHc;AAI5BC,EAAAA,aAAa,EAAE;AAJa,CAAvB;;AAOR,MAAMC,YAAY,GAAG,SAA0C;AAAA,MAAzC;AAAEC,IAAAA,IAAF;AAAQP,IAAAA,OAAR;AAAiBQ,IAAAA,OAAjB;AAA0BC,IAAAA;AAA1B,GAAyC;AAC7D,MAAIC,aAAa,GAAG,IAApB;AACA,MAAIH,IAAI,KAAK,OAAb,EACEG,aAAa,GAAG,MACdZ,KAAK,CAACa,KAAN,eACE,QAAC,cAAD;AAAgB,IAAA,OAAO,EAAEX;AAAzB;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AACES,IAAAA,QAAQ,EAAEA,QAAQ,IAAI,WADxB;AAEEG,IAAAA,SAAS,EAAEJ,OAAO,IAAI,IAFxB;AAGEK,IAAAA,eAAe,EAAE,KAHnB;AAIEC,IAAAA,YAAY,EAAE,IAJhB;AAKEC,IAAAA,YAAY,EAAE,IALhB;AAMEC,IAAAA,SAAS,EAAE,IANb;AAOEC,IAAAA,QAAQ,EAAEC,SAPZ;AAQEC,IAAAA,UAAU,EAAEtB;AARd,GAFF,CADF,CADF,KAeK,IAAIU,IAAI,KAAK,SAAb,EACHG,aAAa,GAAG,MACdZ,KAAK,CAACsB,OAAN,eACE,QAAC,cAAD;AAAgB,IAAA,OAAO,EAAEpB;AAAzB;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AACES,IAAAA,QAAQ,EAAEA,QAAQ,IAAI,WADxB;AAEEG,IAAAA,SAAS,EAAEJ,OAAO,IAAI,IAFxB;AAGEK,IAAAA,eAAe,EAAE,KAHnB;AAIEC,IAAAA,YAAY,EAAE,IAJhB;AAKEC,IAAAA,YAAY,EAAE,IALhB;AAMEC,IAAAA,SAAS,EAAE,IANb;AAOEC,IAAAA,QAAQ,EAAEC,SAPZ;AAQEC,IAAAA,UAAU,EAAEtB;AARd,GAFF,CADF,CADG,KAgBHa,aAAa,GAAG,MACdZ,KAAK,CAACuB,OAAN,eACE,QAAC,cAAD;AAAgB,IAAA,OAAO,EAAErB;AAAzB;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AACES,IAAAA,QAAQ,EAAEA,QAAQ,IAAI,WADxB;AAEEG,IAAAA,SAAS,EAAEJ,OAAO,IAAI,IAFxB;AAGEK,IAAAA,eAAe,EAAE,KAHnB;AAIEC,IAAAA,YAAY,EAAE,IAJhB;AAKEC,IAAAA,YAAY,EAAE,IALhB;AAMEC,IAAAA,SAAS,EAAE,IANb;AAOEC,IAAAA,QAAQ,EAAEC,SAPZ;AAQEC,IAAAA,UAAU,EAAEtB;AARd,GAFF,CADF;AAcF,SAAOa,aAAa,EAApB;AACD,CAhDD;;MAAMJ,Y;AAkDN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Slide, toast } from \"react-toastify\";\r\n\r\nconst ToastComponent = ({ message }) => (\r\n  <div className=\"flex flex-row items-center\">\r\n    {message}\r\n  </div>\r\n);\r\n\r\n export const ToastPosition =  {\r\n   TOP_CENTER: 'top-center',\r\n   TOP_RIGHT: 'top-right',\r\n   BOTTOM_RIGHT: 'bottom-right',\r\n   BOTTOM_CENTER: 'bottom-center'\r\n }\r\n\r\nconst ToastMessage = ({ type, message, timeout, position }) => {\r\n  let toastCallback = null;\r\n  if (type === \"error\")\r\n    toastCallback = () =>\r\n      toast.error(\r\n        <ToastComponent message={message}/>,\r\n        {\r\n          position: position || \"top-right\",\r\n          autoClose: timeout || 1500,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          transition: Slide,\r\n        }\r\n      );\r\n  else if (type === \"success\")\r\n    toastCallback = () =>\r\n      toast.success(\r\n        <ToastComponent message={message} />,\r\n        {\r\n          position: position || \"top-right\",\r\n          autoClose: timeout || 1500,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          transition: Slide,\r\n        }\r\n      );\r\n  else\r\n    toastCallback = () =>\r\n      toast.warning(\r\n        <ToastComponent message={message} />,\r\n        {\r\n          position: position || \"top-right\",\r\n          autoClose: timeout || 1500,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          transition: Slide,\r\n        }\r\n      );\r\n  return toastCallback();\r\n};\r\n\r\nexport default ToastMessage;"]},"metadata":{},"sourceType":"module"}